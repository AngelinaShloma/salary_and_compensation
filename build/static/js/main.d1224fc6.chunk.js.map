{"version":3,"sources":["Pages/Workers/Workers.jsx","Pages/Debts/Debts.jsx","App.js","reportWebVitals.js","index.js"],"names":["Workers","styles","makeStyles","theme","modal","position","width","backgroundColor","palette","background","paper","boxShadow","shadows","padding","spacing","top","left","transform","iconos","cursor","inputMaterial","useStyles","useState","data","setData","modalInsert","setModalInsert","modalEdit","setModalEdit","modalAdd","setModalAdd","last_name","first_name","patronimic_name","e_mail","worker","setWorker","queryGet","a","axios","get","then","response","handleChange","e","target","name","value","prevState","console","log","queryPost","post","concat","ModalWindowInsert","queryPut","put","worker_id","dataNew","map","item","ModalWindowEdit","What","situation","bodyInsert","className","TextField","label","onChange","align","Button","color","onClick","bodyEdit","useEffect","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","to","Add","Edit","Modal","open","onClose","Debts","sum","setSum","Inc","setInc","Pay","setPay","id","useHistory","useParams","debt","period_start","period_end","delay_period","payout_sum","payout_date","debt_increase_sum","debt_increase_date","interest_rate","days_in_year","percentage","worker_debt","setWorkerDebt","debts","total_increase_sum","total_sum","total_payout","debt_id","Number","toFixed","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1224fc6.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './Workers.css';\r\nimport axios from 'axios';\r\nimport {Table, TableContainer, TableHead, TableCell, TableBody, TableRow, Modal, Button, TextField} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Add, Edit} from '@material-ui/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Workers = () => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n    },\r\n    iconos:{\r\n      cursor: 'pointer'\r\n    }, \r\n    inputMaterial:{\r\n      width: '100%'\r\n    }\r\n  }));\r\n\r\n  const styles= useStyles();\r\n  const [data, setData]=useState([]);\r\n  const [modalInsert, setModalInsert]=useState(false);\r\n  const [modalEdit, setModalEdit]=useState(false);\r\n  const [modalAdd, setModalAdd]=useState(false);\r\n\r\n  const [worker, setWorker]=useState({\r\n    last_name: '',\r\n    first_name: '',\r\n    patronimic_name: '',\r\n    e_mail: ''\r\n  })\r\n\r\n  const queryGet=async()=>{\r\n    await axios.get(\"https://vb6th073kf.execute-api.us-east-1.amazonaws.com/dev/accountants/1/workers\")\r\n    .then(response=>{\r\n      setData(response.data)\r\n    })\r\n  }\r\n\r\n  const handleChange=e=>{\r\n    const {name, value}=e.target;\r\n    setWorker(prevState=>({\r\n      ...prevState,\r\n      [name]: value\r\n    }))\r\n    console.log(worker);\r\n  }\r\n\r\n  const queryPost=async()=>{\r\n    await axios.post(\"https://vb6th073kf.execute-api.us-east-1.amazonaws.com/dev/accountants/1/workers\", worker)\r\n    .then(response=>{\r\n      setData(data.concat(response.data))\r\n      ModalWindowInsert()\r\n    })\r\n  }\r\n\r\n  const queryPut=async()=>{\r\n    await axios.put(\"https://vb6th073kf.execute-api.us-east-1.amazonaws.com/dev/accountants/1/workers/\"+worker.worker_id, worker)\r\n    .then(response=>{\r\n      var dataNew=data;\r\n      dataNew.map(item=>{\r\n        if(worker.worker_id===item.worker_id){\r\n          item.last_name=worker.last_name;\r\n          item.first_name=worker.first_name;\r\n          item.patronimic_name=worker.patronimic_name;\r\n          item.e_mail=worker.e_mail;\r\n        }\r\n      })\r\n      setData(dataNew);\r\n      ModalWindowEdit();\r\n    })\r\n  }\r\n\r\n  const ModalWindowEdit=()=>{\r\n    setModalEdit(!modalEdit);\r\n  }\r\n\r\n  const ModalWindowAdd=()=>{\r\n    setModalAdd(!modalAdd);\r\n  }\r\n\r\n  const ModalWindowInsert=()=>{\r\n    setModalInsert(!modalInsert);\r\n  }\r\n\r\n  const What=(item, situation)=>{\r\n    setWorker(item);\r\n    (situation==='Edit')?ModalWindowEdit():ModalWindowAdd()\r\n  }\r\n\r\n  const bodyInsert=(\r\n    <div className={styles.modal}>\r\n      <h3>Добавление нового сотрудника</h3>\r\n      <TextField name=\"last_name\" className={styles.inputMaterial} label=\"Фамилия\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"first_name\" className={styles.inputMaterial} label=\"Имя\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"patronimic_name\" className={styles.inputMaterial} label=\"Отчество\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"e_mail\" className={styles.inputMaterial} label=\"Электронная почта\" onChange={handleChange}/>\r\n      <br /><br />\r\n      <div align=\"right\">\r\n        <Button color=\"primary\" onClick={()=>queryPost()}>Добавить</Button>\r\n        <Button onClick={()=>ModalWindowInsert()}>Отмена</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const bodyEdit=(\r\n    <div className={styles.modal}>\r\n      <h3>Редактирование данных</h3>\r\n      <TextField name=\"last_name\" className={styles.inputMaterial} label=\"Фамилия\" onChange={handleChange} value={worker && worker.last_name}/>\r\n      <br />\r\n      <TextField name=\"first_name\" className={styles.inputMaterial} label=\"Имя\" onChange={handleChange} value={worker && worker.first_name}/>\r\n      <br />\r\n      <TextField name=\"patronimic_name\" className={styles.inputMaterial} label=\"Отчество\" onChange={handleChange} value={worker && worker.patronimic_name}/>\r\n      <br />\r\n      <TextField name=\"e_mail\" className={styles.inputMaterial} label=\"Электронная почта\" onChange={handleChange} value={worker && worker.e_mail}/>\r\n      <br /><br />\r\n      <div align=\"right\">\r\n        <Button color=\"primary\" onClick={()=>queryPut()}>Сохранить</Button>\r\n        <Button onClick={()=>ModalWindowEdit()}>Отмена</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  useEffect(async()=>{\r\n    await queryGet();\r\n  },[])\r\n\r\n  return(\r\n    <div className=\"Workers\">\r\n       <br />\r\n       <Button onClick={()=>ModalWindowInsert()}>Новый сотрудник</Button>\r\n      <br /><br />\r\n     <TableContainer>\r\n       <Table>\r\n         <TableHead>\r\n           <TableRow>\r\n             <TableCell>Фамилия</TableCell>\r\n             <TableCell>Имя</TableCell>\r\n             <TableCell>Отчество</TableCell>\r\n             <TableCell>Электронная почта</TableCell>\r\n             <TableCell>Действия</TableCell>\r\n           </TableRow>\r\n         </TableHead>\r\n         <TableBody>\r\n           {data.map(item=>(\r\n             <TableRow key={item.worker_id}>\r\n               <TableCell>{item.last_name}</TableCell>\r\n               <TableCell>{item.first_name}</TableCell>\r\n               <TableCell>{item.patronimic_name}</TableCell>\r\n               <TableCell>{item.e_mail}</TableCell>\r\n               <TableCell>\r\n               <Link to={'/worker/'+item.worker_id}><Add className={styles.iconos}/></Link>\r\n                 &nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Edit className={styles.iconos} onClick={()=>What(item, 'Edit')}/>\r\n               </TableCell>\r\n             </TableRow>\r\n           ))}\r\n         </TableBody>\r\n       </Table>\r\n     </TableContainer>\r\n     <Modal\r\n     open={modalInsert}\r\n     onClose={ModalWindowInsert}>\r\n        {bodyInsert}\r\n     </Modal>\r\n     <Modal\r\n     open={modalEdit}\r\n     onClose={ModalWindowEdit}>\r\n        {bodyEdit}\r\n     </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Workers;","import React, {useEffect, useState} from 'react';\r\nimport './Debts.css';\r\nimport axios from 'axios';\r\nimport {Table, TableContainer, TableHead, TableCell, TableBody, TableRow, Modal, Button, TextField} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\nconst Debts = () =>  {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)'\r\n    },\r\n    iconos:{\r\n      cursor: 'pointer'\r\n    }, \r\n    inputMaterial:{\r\n      width: '100%'\r\n    }\r\n  }));\r\n\r\n  const styles= useStyles();\r\n  const [data, setData] = useState([]);\r\n  const [sum, setSum] = useState([]);\r\n  const [Inc, setInc] = useState([]);\r\n  const [Pay, setPay] = useState([]);\r\n  const [modalInsert, setModalInsert]=useState(false);\r\n\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [worker_debt, setWorkerDebt]=useState({\r\n    debt: '',\r\n    period_start: '',\r\n    period_end: '',\r\n    delay_period: '',\r\n    payout_sum: '',\r\n    payout_date: '',\r\n    debt_increase_sum: '',\r\n    debt_increase_date: '',\r\n    interest_rate: '',\r\n    days_in_year: '',\r\n    percentage: ''\r\n  })\r\n\r\n  const queryGet=async()=>{\r\n    await axios.get(\"https://vb6th073kf.execute-api.us-east-1.amazonaws.com/dev/accountants/1/workers/\"+id)\r\n    .then(response=>{\r\n      console.log(response.data.debts);\r\n      console.log(response.data.total_increase_sum);\r\n      console.log(response.data.total_sum);\r\n      console.log(response.data.total_payout);\r\n      setData(response.data.debts);\r\n      setInc(response.data.total_increase_sum);\r\n      setSum(response.data.total_sum);\r\n      setPay(response.data.total_payout);\r\n    })\r\n  }\r\n\r\n  const handleChange=e=>{\r\n    const {name, value}=e.target;\r\n    setWorkerDebt(prevState=>({\r\n      ...prevState,\r\n      [name]: value\r\n    }))\r\n    console.log(worker_debt);\r\n  }\r\n\r\n  const queryPost=async()=>{\r\n    await axios.post(\"https://vb6th073kf.execute-api.us-east-1.amazonaws.com/dev/accountants/1/workers/\"+id, worker_debt)\r\n    .then(response=>{\r\n      setData(data.concat(response.data))\r\n      ModalWindowInsert()\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  const ModalWindowInsert=()=>{\r\n    setModalInsert(!modalInsert);\r\n  }\r\n\r\n  const bodyInsert=(\r\n    <div className={styles.modal}>\r\n      <h3>Добавление новой записи</h3>\r\n      <TextField name=\"debt\" className={styles.inputMaterial} label=\"Задолженность\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"period_start\" className={styles.inputMaterial} label=\"Дата начала\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"period_end\" className={styles.inputMaterial} label=\"Дата конца\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"delay_period\" className={styles.inputMaterial} label=\"Количество дней\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"payout_sum\" className={styles.inputMaterial} label=\"Сумма оплаты\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"payout_date\" className={styles.inputMaterial} label=\"Дата оплаты\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"debt_increase_sum\" className={styles.inputMaterial} label=\"Увеличение долга\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"debt_increase_date\" className={styles.inputMaterial} label=\"Дата\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"interest_rate\" className={styles.inputMaterial} label=\"Процентная ставка\" onChange={handleChange}/>\r\n      <br />\r\n      <TextField name=\"days_in_year\" className={styles.inputMaterial} label=\"Дней в году\" onChange={handleChange}/>\r\n      <br /><br />\r\n      <div align=\"right\">\r\n        <Button color=\"primary\" onClick={()=>queryPost()}>Добавить</Button>\r\n        <Button onClick={()=>ModalWindowInsert()}>Отмена</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n  useEffect(async()=>{\r\n    await queryGet();\r\n  },[id])\r\n\r\n  return(\r\n    <div className=\"App\">\r\n       <br />\r\n       <Button onClick={()=>ModalWindowInsert()}>Новая запись</Button>\r\n      <br /><br />\r\n     <TableContainer>\r\n       <Table>\r\n         <TableHead>\r\n           <TableRow>\r\n             <TableCell>Задолженность, руб.</TableCell>\r\n             <TableCell>\r\n               <Table>\r\n                <TableHead>\r\n                 <TableRow>\r\n                 <TableCell>Период задолженности</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                <TableRow>\r\n                  <TableCell>с</TableCell>\r\n                  <TableCell>по</TableCell>\r\n                  <TableCell>дни</TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n             <TableCell>\r\n               <Table>\r\n                 <TableHead>\r\n                 <TableRow>\r\n                 <TableCell>Оплата</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                <TableRow>\r\n                  <TableCell>сумма, руб.</TableCell>\r\n                  <TableCell>дата</TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n             <TableCell>\r\n               <Table>\r\n                 <TableHead>\r\n                 <TableRow>\r\n                 <TableCell>Увеличение долга</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                <TableRow>\r\n                  <TableCell>сумма, руб.</TableCell>\r\n                  <TableCell>дата</TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n             <TableCell>Процентная ставка</TableCell>\r\n             <TableCell>Дней в году</TableCell>\r\n             <TableCell>Проценты</TableCell>\r\n           </TableRow>\r\n         </TableHead>\r\n         <TableBody>\r\n           {data.map(item=>(\r\n             <TableRow key={item.debt_id}>\r\n               <TableCell>{item.debt}</TableCell>\r\n               <TableCell>\r\n               <Table>\r\n                 <TableBody>\r\n                <TableRow>\r\n                  <TableCell>{item.period_start}</TableCell>\r\n                  <TableCell>{item.period_end}</TableCell>\r\n                  <TableCell>{item.delay_period}</TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n               <TableCell>\r\n               <Table>\r\n                 <TableBody>\r\n                <TableRow>\r\n                  <TableCell>{item.payout_sum}</TableCell>\r\n                  <TableCell>{item.payout_date}</TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n               <TableCell>\r\n               <Table>\r\n               <TableBody>\r\n                <TableRow>\r\n                  <TableCell>{item.debt_increase_sum}</TableCell>\r\n                  <TableCell>{item.debt_increase_date}</TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n               <TableCell>{item.interest_rate}</TableCell>\r\n               <TableCell>{item.days_in_year}</TableCell>\r\n               <TableCell>{item.percentage}</TableCell>\r\n             </TableRow>\r\n           ))}\r\n           <TableRow>\r\n           <TableCell></TableCell>\r\n               <TableCell>\r\n               <Table>\r\n                 <TableBody>\r\n                <TableRow>\r\n                  <TableCell></TableCell>\r\n                  <TableCell></TableCell>\r\n                  <TableCell>Итого</TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n               <TableCell>\r\n               <Table>\r\n                 <TableBody>\r\n                <TableRow>\r\n                  <TableCell>{Pay}</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n               <TableCell>\r\n               <Table>\r\n               <TableBody>\r\n                <TableRow>\r\n                  <TableCell>{Inc}</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n                </TableBody>\r\n               </Table>\r\n             </TableCell>\r\n               <TableCell></TableCell>\r\n               <TableCell></TableCell>\r\n               <TableCell>{Number(sum).toFixed(2)}</TableCell>\r\n             </TableRow>\r\n         </TableBody>\r\n       </Table>\r\n     </TableContainer>\r\n     <Modal\r\n     open={modalInsert}\r\n     onClose={ModalWindowInsert}>\r\n        {bodyInsert}\r\n     </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debts;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Workers from './Pages/Workers/Workers';\r\nimport Debts from './Pages/Debts/Debts';\r\n\r\nfunction App() {\r\n  return(\r\n    <Router>\r\n    <div className=\"App\">\r\n      <Workers />\r\n      <Switch>\r\n        <Route exact path=\"/worker/:id\" component={Debts} />\r\n      </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}